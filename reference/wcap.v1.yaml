openapi: 3.0.0
info:
  title: WCAP API define
  description: WCAP API define
  contact:
    name: API Support
    email: jeremy.peng@asml.com
  version: 0.0.1
servers:
  - url: wcap-brion-tw.asml.com/api
    description: wcap api
paths:
  '/teams/{teamId}':
    summary: teams related api
    description: teams related api
    get:
      summary: get team information
      description: |-
        get team information from given team id,
        if team id is empty then return the top team information
      operationId: getTeam
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/teamInfo'
              examples:
                team with id:
                  value:
                    name: ''
                    owners: []
                    teams:
                      - id: '12345'
                        name: AS
                    members:
                      - liang
                      - XXX
                    id: '11111'
                    recordFrequency: 0
                    LastModified: 2020-01-01....
                teams without id:
                  value:
                    team:
                      - name: AS
                        owners:
                          - liang@asml.com
                        subteams:
                          - id: '12345'
                            name: MXP-GUI
                        members:
                          - liang@asml.com
                        id: '11111'
                        recordFrequency: 0
                        LastModified: 2020-01-01....
                      - name: PEG
                        owners:
                          - yanjun@asml.com
                        teams:
                          - id: '12345'
                            name: MXP-GUI
                        members:
                          - yanjun
                          - XXX
                        id: '11111'
                        recordFrequency: 0
                        LastModified: 2020-01-01....
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      tags:
        - teams
      parameters: []
    post:
      summary: create team
      operationId: createTeam
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/teamInfo'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      description: |-
        create a team under given parent team id,
        if {id} is empty, it mean create top level team
      parameters: []
      tags:
        - teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/teamInfo'
            examples: {}
          application/xml:
            schema:
              $ref: '#/components/schemas/teamInfo'
    parameters:
      - schema:
          type: string
        name: teamId
        in: path
        description: ''
        required: true
    put:
      summary: update team
      operationId: updateTeam
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/teamInfo'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
      description: 'update a whold team (decide by {id}) from input'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/teamInfo'
      tags:
        - teams
    delete:
      summary: delete team
      operationId: deleteTeam
      responses:
        '202':
          description: Accepted
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
      description: 'delete a team '
      tags:
        - teams
  '/categories/{teamId}':
    parameters:
      - schema:
          type: string
        name: teamId
        in: path
        required: true
        description: ''
    get:
      summary: get category
      tags:
        - categories
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/category'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
      operationId: getCategory
      description: Get category from team id
    post:
      summary: Create Category
      operationId: createCategory
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/teamInfo'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
      description: create category for a team
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/category'
        description: ''
      tags:
        - categories
    put:
      summary: Update Category
      operationId: updateCategory
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/category'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
      description: update category
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/category'
      tags:
        - categories
    delete:
      summary: Delete Category
      operationId: deleteCategory
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
      description: delete category
      tags:
        - categories
  /login:
    post:
      summary: login
      operationId: login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  Code:
                    type: string
                    description: "return code:\nconst (\n\trespOK respCode = 0\n\trespNoAuth\n\trespAuthFail\n\trespNoPermission\n\trespFailToParseBody\n\trespDbErr\n\trespNotExist\n\trespFailToGenToken\n)\n"
                  Content:
                    type: string
                    description: token generated by server
                  User:
                    type: object
                    properties:
                      ID:
                        type: string
                        description: user id/name
                      Email:
                        type: string
                        description: user email
                      Permission:
                        type: integer
              examples:
                example:
                  value:
                    Code: 0
                    Content: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImplcmVteS5wZW5nQGFzbWwuY29tIiwiZXhwIjoxNTkxMTcxNDE5LCJwZXJtIjoyLCJ1bmFtZSI6ImplcGVuZyJ9.wNPqUA3aTgRUWANh4N3SWTyqvCD-2zPrvrILolubIvc
                    User:
                      ID: jepeng
                      Email: jeremy.peng@asml.com
                      Permission: 2
      description: login with ASML LDAP authenticate server
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                User:
                  type: string
                  description: User account
                Passwd:
                  type: string
                  description: 'User password '
            examples:
              example:
                value:
                  User: jepeng
                  Passwd: XXXXXXX
      tags:
        - auth
tags:
  - name: teams
    description: teams related api
components:
  schemas:
    teamInfo:
      title: teamInfo
      type: object
      x-examples:
        teamInfo:
          name: AS
          owners:
            - liang@asml.com
          subteams:
            - id: '12345'
              name: MXP-GUI
          members:
            - liang
            - XXX
          id: '11111'
          recordFrequency: 0
          LastModified: 2020-01-01....
      x-tags:
        - models
      properties:
        members:
          type: array
          description: 'members email list '
          items:
            type: string
        subteams:
          type: array
          description: sub team info
          items:
            type: object
            properties:
              name:
                type: string
                description: |
                  sub team name
              id:
                type: string
                description: sub team id
        id:
          type: string
          description: |
            team id
        parentId:
          type: string
          description: team parent id
        owners:
          type: array
          description: owner email list
          items:
            type: string
        recordFrequency:
          type: integer
          description: "record frequency, \nenum {\n  daily = 0,\n  weekly = 1,\n\n}"
        lastModified:
          type: string
          description: last modified time
        name:
          type: string
          description: team name
    category:
      title: category
      type: object
      properties:
        teamId:
          type: string
        categories:
          type: array
          items:
            type: object
            properties:
              categoryName:
                type: array
                items:
                  type: string
        lastModified:
          type: string
      x-examples:
        example:
          teamID: '12345'
          Categories:
            - Release:
                - EPDS
                - TestPlan
            - Customer:
                - Enagement
                - ...
            - MRD:
                - ...
          LastModified: XXX
      description: ''
      x-tags:
        - models
    record:
      title: record
      type: object
      x-tags:
        - models
      properties:
        reporter:
          type: string
          description: reporter email
        teamId:
          type: string
        category:
          type: string
        subCategory:
          type: string
        workContent:
          type: string
        plan:
          type: string
        actual:
          type: string
        completion:
          type: string
        dailyRecord:
          type: array
          description: daily log work
          items:
            type: object
            properties:
              date:
                type: string
              detail:
                type: string
              acutal:
                type: string
              completion:
                type: string
        status:
          type: string
        risk:
          type: string
        helpNeed:
          type: string
        comment:
          type: string
        rating:
          type: integer
          description: rating from 0 - 5
  parameters:
    lon:
      name: lon
      in: query
      description: '**Longitude**. *Example: 139*. Longitude coordinate of the location of your interest. Must use with `lat`.'
      schema:
        type: string
